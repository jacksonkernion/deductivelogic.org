export const problemSets = [
    {
        number: 1,
        problems: [
            {
                "id": 5659,
                "assignment_id": 156,
                "number": 1,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "-(p . q)  ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5660,
                "assignment_id": 156,
                "number": 2,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- ( p | q )  ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5661,
                "assignment_id": 156,
                "number": 3,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- ( p > q )  ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5662,
                "assignment_id": 156,
                "number": 4,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- ( p <> q )  ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5663,
                "assignment_id": 156,
                "number": 5,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- p . q    ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5664,
                "assignment_id": 156,
                "number": 6,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- p | q    ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5665,
                "assignment_id": 156,
                "number": 7,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- p > q    ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5666,
                "assignment_id": 156,
                "number": 8,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- p <> q    ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5667,
                "assignment_id": 156,
                "number": 9,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": " ( p . q ) | p ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5668,
                "assignment_id": 156,
                "number": 10,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "( p . q ) <> p ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5669,
                "assignment_id": 156,
                "number": 11,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "( p | q ) . p ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5670,
                "assignment_id": 156,
                "number": 12,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "( p > q ) | p ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5671,
                "assignment_id": 156,
                "number": 13,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "( p > q ) <> p ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5672,
                "assignment_id": 156,
                "number": 14,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "( p <> q ) > p ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5673,
                "assignment_id": 156,
                "number": 15,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "p | ( q <> p ) ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5674,
                "assignment_id": 156,
                "number": 16,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "p > ( q > p ) ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5675,
                "assignment_id": 156,
                "number": 17,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- ( p . q ) . p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5676,
                "assignment_id": 156,
                "number": 18,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- ( p . q ) <> p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5677,
                "assignment_id": 156,
                "number": 19,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- ( p | q ) > p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5678,
                "assignment_id": 156,
                "number": 20,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- ( p > q ) > p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5679,
                "assignment_id": 156,
                "number": 21,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- ( p <> q ) > p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5680,
                "assignment_id": 156,
                "number": 22,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": " ( - p | q ) > p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5681,
                "assignment_id": 156,
                "number": 23,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "( p > - q ) . p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5682,
                "assignment_id": 156,
                "number": 24,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "( p <> - q ) . p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5683,
                "assignment_id": 156,
                "number": 25,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "( p > q ) > - p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5684,
                "assignment_id": 156,
                "number": 26,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "- p <> ( q . p )",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5685,
                "assignment_id": 156,
                "number": 27,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "p | - ( q . p )",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5686,
                "assignment_id": 156,
                "number": 28,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "p <> - ( q | p )",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5687,
                "assignment_id": 156,
                "number": 29,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "p | ( - q . p )",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5688,
                "assignment_id": 156,
                "number": 30,
                "type": 'truthTable',
                "question": null,
                "answer": null,
                "logStr": "p <> ( q <> - p )",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            }
        ]
    },
    {
        number: 2,
        problems: [
            {
                "id": 10899,
                "assignment_id": 371,
                "number": 1,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p . q)",
                "logStr2": "-p | -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10900,
                "assignment_id": 371,
                "number": 2,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p . q)",
                "logStr2": "-p . -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10901,
                "assignment_id": 371,
                "number": 3,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p . q)",
                "logStr2": "-(p <> q)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10902,
                "assignment_id": 371,
                "number": 4,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p . q)",
                "logStr2": "p > q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10903,
                "assignment_id": 371,
                "number": 5,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p . q)",
                "logStr2": "p > -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10904,
                "assignment_id": 371,
                "number": 6,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p . q)",
                "logStr2": "q > p",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10905,
                "assignment_id": 371,
                "number": 7,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p . q)",
                "logStr2": "q > -p",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10906,
                "assignment_id": 371,
                "number": 8,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p | q)",
                "logStr2": "-p | -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10907,
                "assignment_id": 371,
                "number": 9,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p | q)",
                "logStr2": "-p . -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10908,
                "assignment_id": 371,
                "number": 10,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p | q)",
                "logStr2": "-(p <> q)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10909,
                "assignment_id": 371,
                "number": 11,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p | q)",
                "logStr2": "-(-p > q)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10910,
                "assignment_id": 371,
                "number": 12,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p | q)",
                "logStr2": "-p <> -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10911,
                "assignment_id": 371,
                "number": 13,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p > q)",
                "logStr2": "-p > q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10912,
                "assignment_id": 371,
                "number": 14,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p > q)",
                "logStr2": "p > -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10913,
                "assignment_id": 371,
                "number": 15,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p > q)",
                "logStr2": "-p > -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10914,
                "assignment_id": 371,
                "number": 16,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p > q)",
                "logStr2": "p . -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10915,
                "assignment_id": 371,
                "number": 17,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p > q)",
                "logStr2": "-(p <> q)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10916,
                "assignment_id": 371,
                "number": 18,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p <> q)",
                "logStr2": "-p . -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10917,
                "assignment_id": 371,
                "number": 19,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p <> q)",
                "logStr2": "-p <> q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10918,
                "assignment_id": 371,
                "number": 20,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p <> q)",
                "logStr2": "-p <> -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10919,
                "assignment_id": 371,
                "number": 21,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-(p <> q)",
                "logStr2": "p <> -q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10920,
                "assignment_id": 371,
                "number": 22,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p > q) | r",
                "logStr2": "p > (q | r)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10921,
                "assignment_id": 371,
                "number": 23,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p > q) | r",
                "logStr2": "(p | r) > q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10922,
                "assignment_id": 371,
                "number": 24,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p > q) | r",
                "logStr2": "(p > r) | q",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10923,
                "assignment_id": 371,
                "number": 25,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p > q) | r",
                "logStr2": "(p . q) > r",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10924,
                "assignment_id": 371,
                "number": 26,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p > q) | r",
                "logStr2": "(p . -q) > r",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10925,
                "assignment_id": 371,
                "number": 27,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p > q) | r",
                "logStr2": "-r > (p > q)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10926,
                "assignment_id": 371,
                "number": 28,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p . q) | (r . s)",
                "logStr2": "(p | r) . (q | s)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10927,
                "assignment_id": 371,
                "number": 29,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p . q) | (r . s)",
                "logStr2": "(p | r) . (q | s) . (p | s)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10928,
                "assignment_id": 371,
                "number": 30,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p . q) | (r . s)",
                "logStr2": "(p | r) . (q | s) . (p | s) . (q | r)",
                "logStrSet": null,
                "sentSet": null
            }
        ]
    },
    {
        number: 3,
        problems: [
            {
                "id": 5788,
                "assignment_id": 162,
                "number": 1,
                "type": "paraphrase",
                "question": "If Ambrose enrolls in either logic or Urdu, then he will ace that course.",
                "answer": null,
                "logStr": " (p > q) . (r > s)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5789,
                "assignment_id": 162,
                "number": 2,
                "type": "paraphrase",
                "question": "If Ambrose enrolls in both logic and Urdu, then he will ace at least one of those courses.",
                "answer": null,
                "logStr": "(p . q) > (r | s)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5790,
                "assignment_id": 162,
                "number": 3,
                "type": "paraphrase",
                "question": "If Ambrose enrolls in both logic and Urdu, then he will ace one of those courses if and only if he doesn’t ace the other.",
                "answer": null,
                "logStr": "(p . q) > (r <> -s)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5791,
                "assignment_id": 162,
                "number": 4,
                "type": "paraphrase",
                "question": "If Ambrose enrolls in both logic and Urdu, then he will ace one of those courses only if he doesn’t ace the other.",
                "answer": null,
                "logStr": "(p . q) > -(r . s)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5792,
                "assignment_id": 162,
                "number": 5,
                "type": "paraphrase",
                "question": "If Ambrose enrolls in logic, then he will fail – unless he secures the help of a tutor, in which case he'll pass.",
                "answer": null,
                "logStr": "p > (q <> -r)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5793,
                "assignment_id": 162,
                "number": 6,
                "type": "paraphrase",
                "question": "Alice will help Jane study for the logic quiz if and only if Jane asks her to, and, in addition, Alice is neither tired nor busy.",
                "answer": null,
                "logStr": "p <> (q . -r . -s)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5794,
                "assignment_id": 162,
                "number": 7,
                "type": "paraphrase",
                "question": "Alice will help Jane study for the logic quiz if and only if Jane asks her to, and, in addition, Alice isn’t both tired and busy.",
                "answer": null,
                "logStr": "p <> [q . -(r . s) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5795,
                "assignment_id": 162,
                "number": 8,
                "type": "paraphrase",
                "question": "Provided he has enough money and remembers his shopping list, Ishmael will buy milk, eggs, and a harpoon at the store; otherwise, he'll buy no more than two of those items.",
                "answer": null,
                "logStr": "(p . q) <> (r . s . t)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5796,
                "assignment_id": 162,
                "number": 9,
                "type": "paraphrase",
                "question": "Provided he has enough money and remembers his shopping list, Ishmael will buy milk, eggs, and a harpoon at the store; otherwise, he'll buy just two of those items.",
                "answer": null,
                "logStr": "[(p . q) > (r . s . t)] . { -(p . q) > [ (r . s . -t) | (r . -s . t) | (-r . s . t) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5797,
                "assignment_id": 162,
                "number": 10,
                "type": "paraphrase",
                "question": "If Suzy goes to the movies, then Samantha will go with her, and will insist on treating – unless Suzy strenuously objects, in which case she won't insist on treating.",
                "answer": null,
                "logStr": "p > [ q . (r <> -s) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5798,
                "assignment_id": 162,
                "number": 11,
                "type": "paraphrase",
                "question": "Janet will become either a doctor or a lawyer, provided she doesn't fail logic.",
                "answer": null,
                "logStr": "-p > (q | r)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5799,
                "assignment_id": 162,
                "number": 12,
                "type": "paraphrase",
                "question": "Billy does not realize that Suzy will go to dinner with him only if he combs his hair; Janet thinks that Suzy will go to dinner with her only if she doesn’t comb her hair. ",
                "answer": null,
                "logStr": "-p . q",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5800,
                "assignment_id": 162,
                "number": 13,
                "type": "paraphrase",
                "question": "Captain Al will either complain to both Suzy and Ahmed, or sulk in his room (but not both) if his term paper does not impress his teacher.",
                "answer": null,
                "logStr": "-p > [ (q . r) <> -s ] ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5801,
                "assignment_id": 162,
                "number": 14,
                "type": "paraphrase",
                "question": "Even if Archibald borrows heavily to finance his campaign and wins at least two of the three debates, he will lose the election.",
                "answer": null,
                "logStr": "p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5802,
                "assignment_id": 162,
                "number": 15,
                "type": "paraphrase",
                "question": "Even though Archibald borrowed heavily to finance his campaign and won two of the three debates, he lost the election.",
                "answer": null,
                "logStr": "p . q . [ (r.s.-t) | (-r.s.t) | (r.-s.t)]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            }
        ]
    },
    {
        number: 4,
        problems: [
            {
                "id": 5937,
                "assignment_id": 169,
                "number": 1,
                "type": "quantParaphrase",
                "question": "Every circle is red.",
                "answer": null,
                "logStr": "(Ax)(Cx > Rx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = \"x is a circle\"/Rx = \"x is red\""
            },
            {
                "id": 5938,
                "assignment_id": 169,
                "number": 2,
                "type": "quantParaphrase",
                "question": "All circles are red.",
                "answer": null,
                "logStr": "(Ax)(Cx > Rx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Rx = “x is red”"
            },
            {
                "id": 5939,
                "assignment_id": 169,
                "number": 3,
                "type": "quantParaphrase",
                "question": "If there are any circles, then they are red.",
                "answer": null,
                "logStr": "(Ax)(Cx > Rx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Rx = “x is red”"
            },
            {
                "id": 5940,
                "assignment_id": 169,
                "number": 4,
                "type": "quantParaphrase",
                "question": "Something is a circle only if it’s red.",
                "answer": null,
                "logStr": "(Ax)(Cx > Rx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Rx = “x is red”"
            },
            {
                "id": 5941,
                "assignment_id": 169,
                "number": 5,
                "type": "quantParaphrase",
                "question": "Something is red only if it’s a circle.",
                "answer": null,
                "logStr": "(Ax)(Rx > Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Rx = “x is red”"
            },
            {
                "id": 5942,
                "assignment_id": 169,
                "number": 6,
                "type": "quantParaphrase",
                "question": "There are red circles.",
                "answer": null,
                "logStr": "(Ex)(Cx . Rx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Rx = “x is red”"
            },
            {
                "id": 5943,
                "assignment_id": 169,
                "number": 7,
                "type": "quantParaphrase",
                "question": "There is at least one red circle.",
                "answer": null,
                "logStr": "(Ex)(Cx . Rx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Rx = “x is red”"
            },
            {
                "id": 5944,
                "assignment_id": 169,
                "number": 8,
                "type": "quantParaphrase",
                "question": "Some red circle is translucent.",
                "answer": null,
                "logStr": "(Ex)(Cx . Rx . Lx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Rx = “x is red”/Lx = “x is translucent”"
            },
            {
                "id": 5945,
                "assignment_id": 169,
                "number": 9,
                "type": "quantParaphrase",
                "question": "Some translucent circle is red.",
                "answer": null,
                "logStr": "(Ex)(Cx . Rx . Lx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Rx = “x is red”/Lx = “x is translucent”"
            },
            {
                "id": 5946,
                "assignment_id": 169,
                "number": 10,
                "type": "quantParaphrase",
                "question": "Something red and translucent is a circle.",
                "answer": null,
                "logStr": "(Ex)(Cx . Rx . Lx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Rx = “x is red”/Lx = “x is translucent”"
            },
            {
                "id": 5947,
                "assignment_id": 169,
                "number": 11,
                "type": "quantParaphrase",
                "question": "Every triangle is blue if it’s opaque.",
                "answer": null,
                "logStr": "(Ax)((Tx . Ox) > Bx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Tx = “x is a triangle”/Bx = “x is blue”/Ox = “x is opaque”"
            },
            {
                "id": 5948,
                "assignment_id": 169,
                "number": 12,
                "type": "quantParaphrase",
                "question": "Every opaque triangle is blue.",
                "answer": null,
                "logStr": "(Ax)((Tx . Ox) > Bx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Tx = “x is a triangle”/Ox = “x is opaque”/Bx = “x is blue”"
            },
            {
                "id": 5949,
                "assignment_id": 169,
                "number": 13,
                "type": "quantParaphrase",
                "question": "If there are any circles, then there are also triangles.",
                "answer": null,
                "logStr": "(Ex)(Cx) > (Ex)(Tx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Tx = “x is a triangle”"
            },
            {
                "id": 5950,
                "assignment_id": 169,
                "number": 14,
                "type": "quantParaphrase",
                "question": "There are red circles and blue triangles, but no red triangles or blue circles.",
                "answer": null,
                "logStr": "(Ex)(Cx . Rx) . (Ey)(Ty . By) . -(Ez)((Tz . Rz) | (Cz . Bz))",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Tx = “x is a triangle”/Rx = “x is red”/Bx = “x is blue”"
            },
            {
                "id": 5951,
                "assignment_id": 169,
                "number": 15,
                "type": "quantParaphrase",
                "question": "The only red things are circles.",
                "answer": null,
                "logStr": "(Ax)(Rx > Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Rx = “x is red”"
            },
            {
                "id": 5952,
                "assignment_id": 169,
                "number": 16,
                "type": "quantParaphrase",
                "question": "The only things that are neither red nor translucent are triangles.",
                "answer": null,
                "logStr": "(Ax)((-Rx . -Lx) > Tx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Tx = “x is a triangle”/Lx = “x is translucent”/Rx = “x is red”"
            },
            {
                "id": 5953,
                "assignment_id": 169,
                "number": 17,
                "type": "quantParaphrase",
                "question": "If something is a translucent circle, then it is blue; otherwise, it is both red and opaque.",
                "answer": null,
                "logStr": "(Ax)[ ((Cx . Lx) > Bx) . (-(Cx . Lx) > (Rx . Ox)) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Lx = “x is translucent”/Rx = “x is red”/Bx = “x is blue”/Ox = “x is opaque”"
            },
            {
                "id": 5954,
                "assignment_id": 169,
                "number": 18,
                "type": "quantParaphrase",
                "question": "Circles are red if and only if they are translucent; but triangles are red if and only if they aren’t.",
                "answer": null,
                "logStr": "(Ax)[ Cx > (Rx <> Lx) ] . (Ay)[ Ty > (Ry <> -Ly) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Tx = “x is a triangle”/Lx = “x is translucent”/Rx = “x is red”"
            },
            {
                "id": 5955,
                "assignment_id": 169,
                "number": 19,
                "type": "quantParaphrase",
                "question": "If there is even one blue circle, then they are all blue – although in that case, at least one is translucent.",
                "answer": null,
                "logStr": "[(Ex)(Cx . Bx) >  (Ay)(Cy > By)] . [(Ay)(Cy > By) > (Ez)(Cz . Lz) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Bx = “x is blue”/Lx = “x is translucent”"
            },
            {
                "id": 5956,
                "assignment_id": 169,
                "number": 20,
                "type": "quantParaphrase",
                "question": "No circle is red unless every triangle is either blue or opaque.",
                "answer": null,
                "logStr": "(Ax)(Cx > -Rx) | (Ay)(Ty > (By | Oy))",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Tx = “x is a triangle”/Rx = “x is red”/Bx = “x is blue”/Ox = “x is opaque”"
            },
            {
                "id": 5957,
                "assignment_id": 169,
                "number": 21,
                "type": "quantParaphrase",
                "question": "A red triangle is opaque only if everything that’s red is opaque.",
                "answer": null,
                "logStr": "(Ex)(Tx . Rx . Ox) > (Ay)(Ry > Oy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Tx = “x is a triangle”/Rx = “x is red”/Ox = “x is opaque”"
            },
            {
                "id": 5958,
                "assignment_id": 169,
                "number": 22,
                "type": "quantParaphrase",
                "question": "There is a circle that is neither red nor opaque if and only if there is a triangle that is both.",
                "answer": null,
                "logStr": "(Ex)(Cx . -Rx . -Ox) <> (Ey)(Ty . Ry . Oy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Tx = “x is a triangle”/Ox = “x is opaque”/Rx = “x is red”"
            },
            {
                "id": 5959,
                "assignment_id": 169,
                "number": 23,
                "type": "quantParaphrase",
                "question": "Unless there is at least one triangle that is blue if and only if it is opaque, there are no red, translucent circles.",
                "answer": null,
                "logStr": "(Ex)(Tx . (Bx <> Ox)) | -(Ey)(Cy . Ry . Ly)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Tx = “x is a triangle”/Ox = “x is opaque”/Rx = “x is red”/Bx = “x is blue”/Lx = “x is translucent”"
            },
            {
                "id": 5960,
                "assignment_id": 169,
                "number": 24,
                "type": "quantParaphrase",
                "question": "All circles and triangles are, respectively, red and blue.",
                "answer": null,
                "logStr": "(Ax)(Cx > Rx) . (Ay)(Ty > By)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Tx = “x is a triangle”/Bx = “x is blue”/Rx = “x is red”"
            },
            {
                "id": 5961,
                "assignment_id": 169,
                "number": 25,
                "type": "quantParaphrase",
                "question": "If every circle is red if it’s translucent, and every triangle is red if it’s not, then – unless there is something that is neither a circle nor a triangle – everything is either translucent or red.",
                "answer": null,
                "logStr": "[ (Ax)((Cx . Lx) > Rx) . (Ay)((Ty . -Ly) > Ry) ] > [ (Ez)(-Cz . -Tz) | (Aw)(Lw | Rw) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Cx = “x is a circle”/Tx = “x is a triangle”/Rx = “x is red”/Lx = “x is translucent”"
            }
        ]
    },
    {
        number: 5,
        problems: [
            {
                "id": 5981,
                "assignment_id": 170,
                "number": 1,
                "type": "quantParaphrase",
                "question": "Everything points to itself.",
                "answer": null,
                "logStr": "Ax(Pxx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”"
            },
            {
                "id": 5982,
                "assignment_id": 170,
                "number": 2,
                "type": "quantParaphrase",
                "question": "Everything points to something. [Ambiguous! Give one paraphrase here, the other in the duplicate of this question.]",
                "answer": null,
                "logStr": "AxEy(Pxy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”"
            },
            {
                "id": 5983,
                "assignment_id": 170,
                "number": 3,
                "type": "quantParaphrase",
                "question": "Everything points to something. [Ambiguous! Give one paraphrase here, the other in the duplicate of this question.]",
                "answer": null,
                "logStr": "EyAx(Pxy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”"
            },
            {
                "id": 5984,
                "assignment_id": 170,
                "number": 4,
                "type": "quantParaphrase",
                "question": "At least one thing points to itself.",
                "answer": null,
                "logStr": "Ex(Pxx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”"
            },
            {
                "id": 5985,
                "assignment_id": 170,
                "number": 5,
                "type": "quantParaphrase",
                "question": "At least one thing points to itself, and at least one thing doesn’t.",
                "answer": null,
                "logStr": "(Ex(Pxx)).(Ex(-Pxx))",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”"
            },
            {
                "id": 5986,
                "assignment_id": 170,
                "number": 6,
                "type": "quantParaphrase",
                "question": "There is a triangle that points to a circle.",
                "answer": null,
                "logStr": "Ex[ Tx . Ey(Cy . Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”/Tx = “x is a triangle”/Cx = “x is a circle”"
            },
            {
                "id": 5987,
                "assignment_id": 170,
                "number": 7,
                "type": "quantParaphrase",
                "question": "There is a triangle that points to all circles.",
                "answer": null,
                "logStr": "Ex[ Tx . Ay(Cy > Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”/Tx = “x is a triangle”/Cx = “x is a circle”"
            },
            {
                "id": 5988,
                "assignment_id": 170,
                "number": 8,
                "type": "quantParaphrase",
                "question": "There is a circle that all triangles point to.",
                "answer": null,
                "logStr": "Ex[ Cx . Ay(Ty > Pyx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”/Tx = “x is a triangle”/Cx = “x is a circle”"
            },
            {
                "id": 5989,
                "assignment_id": 170,
                "number": 9,
                "type": "quantParaphrase",
                "question": "Each triangle has a circle that it points to.",
                "answer": null,
                "logStr": "Ax[ Tx > Ey(Cy . Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”/Tx = “x is a triangle”/Cx = “x is a circle”"
            },
            {
                "id": 5990,
                "assignment_id": 170,
                "number": 10,
                "type": "quantParaphrase",
                "question": "Every circle points to every triangle.",
                "answer": null,
                "logStr": "Ax[ Cx > Ay(Ty > Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”/Tx = “x is a triangle”/Cx = “x is a circle”"
            },
            {
                "id": 5991,
                "assignment_id": 170,
                "number": 11,
                "type": "quantParaphrase",
                "question": "There are at least two triangles.",
                "answer": null,
                "logStr": "ExEy(Tx . Ty . x!=y)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Tx = “x is a triangle”/x=y = \"x is identical to y\""
            },
            {
                "id": 5992,
                "assignment_id": 170,
                "number": 12,
                "type": "quantParaphrase",
                "question": "If any triangle is red, then some other triangle is blue.",
                "answer": null,
                "logStr": "Ax[ (Tx . Rx) > Ey(Ty . By . x!=y) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Tx = “x is a triangle”/Rx = “x is red”/Bx = “x is blue”/x=y = \"x is identical to y\""
            },
            {
                "id": 5993,
                "assignment_id": 170,
                "number": 13,
                "type": "quantParaphrase",
                "question": "Every thing points to at least one thing that doesn’t point back to it.",
                "answer": null,
                "logStr": "AxEy(Pxy . -Pyx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”"
            },
            {
                "id": 5994,
                "assignment_id": 170,
                "number": 14,
                "type": "quantParaphrase",
                "question": "Every thing points to at least one thing that points to everything it points to.",
                "answer": null,
                "logStr": "AxEy[ Pxy . Az(Pxz > Pyz) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”"
            },
            {
                "id": 5995,
                "assignment_id": 170,
                "number": 15,
                "type": "quantParaphrase",
                "question": "Every thing points to at least one thing that doesn’t point back to it, but that does point to everything that it points to.",
                "answer": null,
                "logStr": "AxEy[ Pxy . -Pyx . Az(Pxz > Pyz) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”"
            },
            {
                "id": 5996,
                "assignment_id": 170,
                "number": 16,
                "type": "quantParaphrase",
                "question": "Although some triangles point to themselves, no circles do, unless they are red.",
                "answer": null,
                "logStr": "Ex(Tx . Pxx) . Ax[ Cx > (-Pxx | Rx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”/Rx = “x is red”/Cx = “x is a circle”/Tx = \"x is a triangle\""
            },
            {
                "id": 5997,
                "assignment_id": 170,
                "number": 17,
                "type": "quantParaphrase",
                "question": "Any circle points to any triangle that doesn’t point back to it only if that triangle is red.",
                "answer": null,
                "logStr": "AxAy[ (Cx . Ty . Pxy . -Pyx) > Ry ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”/Tx = “x is a triangle”/Cx = “x is a circle”/Rx = “x is red”"
            },
            {
                "id": 5998,
                "assignment_id": 170,
                "number": 18,
                "type": "quantParaphrase",
                "question": "Every blue thing points to something that points to no red things.",
                "answer": null,
                "logStr": "Ax{ Bx > Ey[ Pxy . Az(Rz > -Pyz) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "Pxy = “x points to y”/Rx = “x is red”/Bx = “x is blue”"
            }
        ]
    },
    {
        number: 6,
        problems: [
            {
                "id": 5816,
                "assignment_id": 164,
                "number": 1,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "-(p . q)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5817,
                "assignment_id": 164,
                "number": 2,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "p <> q",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5818,
                "assignment_id": 164,
                "number": 3,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "p > q",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5819,
                "assignment_id": 164,
                "number": 4,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "(p | q) . (r | s)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5820,
                "assignment_id": 164,
                "number": 5,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "(p | q) . (-q | r)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5821,
                "assignment_id": 164,
                "number": 6,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "(p . q) > r",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5822,
                "assignment_id": 164,
                "number": 7,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "p > (q . r)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5823,
                "assignment_id": 164,
                "number": 8,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "p > (q <> r)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5824,
                "assignment_id": 164,
                "number": 9,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "(p > q) <> r",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5825,
                "assignment_id": 164,
                "number": 10,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "(p . q) <> (r | s)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5826,
                "assignment_id": 164,
                "number": 11,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "{ [ p | (r > p) ] <> p } | [ (q <> r) > (p <> r) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5827,
                "assignment_id": 164,
                "number": 12,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "-r . -(p . r) ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5828,
                "assignment_id": 164,
                "number": 13,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "r . ( -r > { [ (q > r) <> p ] <> r } )",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5829,
                "assignment_id": 164,
                "number": 14,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "r > { (r > q) . [ (p > q) > (q > r) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5830,
                "assignment_id": 164,
                "number": 15,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "(q . p) > { [ r <> (r <> q) ] <> -r }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            }
        ]
    },
    {
        number: 7,
        problems: [
            {
                "id": 10935,
                "assignment_id": 372,
                "number": 1,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "[ (p <> r) | (q > r) ] . q",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10936,
                "assignment_id": 372,
                "number": 2,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "q <> ( [ p <> (q . r) ] | -{ (q | r) <> [ (q <> r) . r ] } )",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10937,
                "assignment_id": 372,
                "number": 3,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "[ (p . r) > q ] . { -(q . r) <> [ (p | q) > (p <> q) ] } ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10938,
                "assignment_id": 372,
                "number": 4,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "{ r | [ (r . p) <> (q . p) ] } <> { q | [ (q > p) > r ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10939,
                "assignment_id": 372,
                "number": 5,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "{ [ (p . r) <> p ] > [ q | (r . q . p) ] } | { -p <> [ (r . q) | (-q . p) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10940,
                "assignment_id": 372,
                "number": 6,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "{ [ -p <> (p . q) ] | (q . r) } <> { [ (p | q) <> (q <> r) ] | -p }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10942,
                "assignment_id": 372,
                "number": 7,
                "type": "disjNormForm",
                "question": null,
                "answer": null,
                "logStr": "( { r | [ -r > (p <> r) ] } > -q ) <> ( { p . r . [ (p . r) > q ] } . { (q <> r) > [ (q <> r) <> (q | r) ] } )",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            }
        ]
    },
    {
        number: 8,
        problems: [
            {
                "id": 5836,
                "assignment_id": 165,
                "number": 1,
                "type": "implicationSet",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "p.q,  p,  p > q,  p | q,  p <> q",
                "sentSet": null
            },
            {
                "id": 5837,
                "assignment_id": 165,
                "number": 2,
                "type": "implicationSet",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "p <> (p > q), -p > p, p <> (q . p), p <> (q > p), (p | q) > (p . q)",
                "sentSet": null
            },
            {
                "id": 5838,
                "assignment_id": 165,
                "number": 3,
                "type": "implicationSet",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "-q, q > (p . r), q > (-p . -r), q > (p <> r)",
                "sentSet": null
            },
            {
                "id": 5839,
                "assignment_id": 165,
                "number": 4,
                "type": "implicationSet",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "(p | q) > [ p . (r | -q) ],  [ p <> (r > p) ] > -q,  (q | r) > (r . -q),  -{ q . [ (p > r) > (-p . r) ] }",
                "sentSet": null
            },
            {
                "id": 5840,
                "assignment_id": 165,
                "number": 5,
                "type": "implicationSet",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "(p . q . r) | [ -p . (-q | -r) ],  -p . (q <> -r),  [ p . (q <> r) ] | [ -p . (-q | -r) ], [ p . (q <> r) ] | [ -p . (q <> -r) ]",
                "sentSet": null
            },
            {
                "id": 5842,
                "assignment_id": 165,
                "number": 6,
                "type": "implication",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "[ q > (p | q) ] | (q . r)",
                "logStr2": "p | q | r",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5843,
                "assignment_id": 165,
                "number": 7,
                "type": "implication",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-{ [ (p <> r) <> (-q > r) ] > r }",
                "logStr2": "-r . (p | q)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5844,
                "assignment_id": 165,
                "number": 8,
                "type": "implication",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-{ [ (-p <> r) <> (q > r) ] > r }",
                "logStr2": "-r . (p | q)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 5845,
                "assignment_id": 165,
                "number": 9,
                "type": "implication",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-{ [ (p <> r) <> (q > r) ] > r }",
                "logStr2": "-r . (p | q)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10943,
                "assignment_id": 165,
                "number": 10,
                "type": "equivalenceSet",
                "question": null,
                "answer": null,
                "logStr": "p . q",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "-(-p . -q),   -(-p | -q),  -(p > -q), -(-p > q), p <> (p > q), p <> (p | q)",
                "sentSet": null
            },
            {
                "id": 10944,
                "assignment_id": 165,
                "number": 11,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "p | (q . r)",
                "logStr2": "(p | q) . (q > r)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10945,
                "assignment_id": 165,
                "number": 12,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "-p <> (q . r)",
                "logStr2": "(-p <> q) . (q > r)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10946,
                "assignment_id": 165,
                "number": 13,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p . q) | (q . r) | (p . -r)",
                "logStr2": "(q . r) | (p . -r)",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10947,
                "assignment_id": 165,
                "number": 14,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p <> q) <> (r <> -q)",
                "logStr2": "(p > -r) . [ (-p . q) > r ]",
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10948,
                "assignment_id": 165,
                "number": 15,
                "type": "equivalence",
                "question": null,
                "answer": null,
                "logStr": null,
                "logStr1": "(p . q) <> (r | s)",
                "logStr2": "(p . q) | (-r . -s)",
                "logStrSet": null,
                "sentSet": null
            }
        ]
    },
    {
        number: 9,
        problems: [
            {
                "id": 6011,
                "assignment_id": 171,
                "number": 1,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Bx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6012,
                "assignment_id": 171,
                "number": 2,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Bx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6013,
                "assignment_id": 171,
                "number": 3,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Bx | Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6014,
                "assignment_id": 171,
                "number": 4,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Bx) | (Ax)(Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6015,
                "assignment_id": 171,
                "number": 5,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Bx | Cx) > [ (Ax)(Bx) | (Ax)(Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6016,
                "assignment_id": 171,
                "number": 6,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ax)(Bx) | (Ax)(Cx) ] > (Ax)(Bx | Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6019,
                "assignment_id": 171,
                "number": 7,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ax)(Bx) | (Ax)(Cx) ] > (Ax)(Bx | Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6020,
                "assignment_id": 171,
                "number": 8,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Bx <> Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6021,
                "assignment_id": 171,
                "number": 9,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ax)(Bx) ] <> [ (Ax)(Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6022,
                "assignment_id": 171,
                "number": 10,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ax)(Bx <> Cx) ] > { [ (Ax)(Bx) ] <> [ (Ax)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6023,
                "assignment_id": 171,
                "number": 11,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ax)(Bx <> Cx) ] > { [ (Ax)(Bx) ] <> [ (Ax)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6024,
                "assignment_id": 171,
                "number": 12,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{ [ (Ax)(Bx) ] <> [ (Ax)(Cx) ] } >  [ (Ax)(Bx <> Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6025,
                "assignment_id": 171,
                "number": 13,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{ [ (Ax)(Bx) ] <> [ (Ax)(Cx) ] } >  [ (Ax)(Bx <> Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6026,
                "assignment_id": 171,
                "number": 14,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Bx > Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6027,
                "assignment_id": 171,
                "number": 15,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ex)(Bx) ] > [ (Ax)(Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6028,
                "assignment_id": 171,
                "number": 16,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{ [ (Ex)(Bx) ] > [ (Ax)(Cx) ] } > [(Ax)(Bx > Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6029,
                "assignment_id": 171,
                "number": 17,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{ [ (Ex)(Bx) ] > [ (Ax)(Cx) ] } > [(Ax)(Bx > Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6030,
                "assignment_id": 171,
                "number": 18,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[(Ax)(Bx > Cx) ] >  { [ (Ex)(Bx) ] > [ (Ax)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6031,
                "assignment_id": 171,
                "number": 19,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[(Ax)(Bx > Cx) ] >  { [ (Ex)(Bx) ] > [ (Ax)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6032,
                "assignment_id": 171,
                "number": 20,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Bx . Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6033,
                "assignment_id": 171,
                "number": 21,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ex)(Bx) ] . [ (Ex)(Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6034,
                "assignment_id": 171,
                "number": 22,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Bx . Cx) > { [ (Ex)(Bx) ] . [ (Ex)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6035,
                "assignment_id": 171,
                "number": 23,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Bx . Cx) > { [ (Ex)(Bx) ] . [ (Ex)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6036,
                "assignment_id": 171,
                "number": 24,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Bx . Cx) <> { [ (Ex)(Bx) ] . [ (Ex)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6037,
                "assignment_id": 171,
                "number": 25,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Bx . Cx) <> { [ (Ex)(Bx) ] . [ (Ex)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6038,
                "assignment_id": 171,
                "number": 26,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{ [ (Ex)(Bx) ] . [ (Ex)(Cx) ] } >  (Ex)(Bx . Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6039,
                "assignment_id": 171,
                "number": 27,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{ [ (Ex)(Bx) ] . [ (Ex)(Cx) ] } >  (Ex)(Bx . Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6040,
                "assignment_id": 171,
                "number": 28,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Bx > Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6041,
                "assignment_id": 171,
                "number": 29,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Bx <> Cx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6042,
                "assignment_id": 171,
                "number": 30,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ex)(Bx) ] <> [ (Ex)(Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6043,
                "assignment_id": 171,
                "number": 31,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ex)(Bx <> Cx) ] > { [ (Ex)(Bx) ] <> [ (Ex)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6044,
                "assignment_id": 171,
                "number": 32,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ex)(Bx <> Cx) ] > { [ (Ex)(Bx) ] <> [ (Ex)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6045,
                "assignment_id": 171,
                "number": 33,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{ [ (Ex)(Bx) ] <> [ (Ex)(Cx) ] } >  [ (Ex)(Bx <> Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6046,
                "assignment_id": 171,
                "number": 34,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{ [ (Ex)(Bx) ] <> [ (Ex)(Cx) ] } >  [ (Ex)(Bx <> Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6047,
                "assignment_id": 171,
                "number": 35,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": " [ (Ex)(Bx) ] <> [ (Ax)(Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6048,
                "assignment_id": 171,
                "number": 36,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{ [ (Ex)(Bx) ] <> [ (Ax)(Cx) ] } > [ (Ax)(Bx > -Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6049,
                "assignment_id": 171,
                "number": 37,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{ [ (Ex)(Bx) ] <> [ (Ax)(Cx) ] } > [ (Ax)(Bx > -Cx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6050,
                "assignment_id": 171,
                "number": 38,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ax)(Bx > -Cx) ] >  { [ (Ex)(Bx) ] <> [ (Ax)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6051,
                "assignment_id": 171,
                "number": 39,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ax)(Bx > -Cx) ] >  { [ (Ex)(Bx) ] <> [ (Ax)(Cx) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 8177,
                "assignment_id": 171,
                "number": 40,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "{(Ax)[ (Fx . Gx) <> (Hx | Jx) ]}.{[ ((Ax)Gx) | ((Ax)-Gx) ] <> [ ((Ex)Hx) . ((Ex)-Hx) ]}.(Ax){ Fx > [ (Gx <> Hx) <> Jx ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            }
        ]
    },
    {
        number: 10,
        problems: [
            {
                "id": 6053,
                "assignment_id": 172,
                "number": 1,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)(Pxy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6054,
                "assignment_id": 172,
                "number": 2,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Ay)(Pxy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6055,
                "assignment_id": 172,
                "number": 3,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ay)(Ex)(Pxy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6056,
                "assignment_id": 172,
                "number": 4,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ey)(Ax)(Pxy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6057,
                "assignment_id": 172,
                "number": 5,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ax)(Ey)(Pxy) ] > [ (Ey)(Ax)(Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6058,
                "assignment_id": 172,
                "number": 6,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ax)(Ey)(Pxy) ] > [ (Ey)(Ax)(Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6059,
                "assignment_id": 172,
                "number": 7,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ey)(Ax)(Pxy) ] >  [ (Ax)(Ey)(Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6060,
                "assignment_id": 172,
                "number": 8,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ey)(Ax)(Pxy) ] >  [ (Ax)(Ey)(Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6061,
                "assignment_id": 172,
                "number": 9,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)(Pxy . -Pyx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 6062,
                "assignment_id": 172,
                "number": 10,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ey)(Ax)(Pxy . -Pyx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6063,
                "assignment_id": 172,
                "number": 11,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ey)(Ax)(Pxy . -Pyx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6064,
                "assignment_id": 172,
                "number": 12,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ey)(Ax)[ (x != y) > (Pxy . -Pyx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6065,
                "assignment_id": 172,
                "number": 13,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ey)(Ax)[ (x != y) > (Pxy . -Pyx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6066,
                "assignment_id": 172,
                "number": 14,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)[ (x != y) > (Pxy . -Pyx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6067,
                "assignment_id": 172,
                "number": 15,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)[ (x != y) > (Pxy . -Pyx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6068,
                "assignment_id": 172,
                "number": 16,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ay)(Pxy <> -Pyx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6069,
                "assignment_id": 172,
                "number": 17,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ay)(Pxy <> -Pyx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6070,
                "assignment_id": 172,
                "number": 18,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ay)[ (x!=y) > (Pxy . -Pyx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6071,
                "assignment_id": 172,
                "number": 19,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ay)[ (x!=y) > (Pxy . -Pyx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6072,
                "assignment_id": 172,
                "number": 20,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ay)[ (x!=y) > (Pxy <> -Pyx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6073,
                "assignment_id": 172,
                "number": 21,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ay)[ (x!=y) > (Pxy <> -Pyx) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6074,
                "assignment_id": 172,
                "number": 22,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Ey)(Az)[ Pxy . - Pyx . (Pxz > Pyz) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6075,
                "assignment_id": 172,
                "number": 23,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Ey)(Az)[ Pxy . - Pyx . (Pxz > Pyz) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6076,
                "assignment_id": 172,
                "number": 24,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)(Az)[ Pxy . - Pyx . (Pxz > Pyz) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6077,
                "assignment_id": 172,
                "number": 25,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)(Az)[ Pxy . - Pyx . (Pxz > Pyz) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6078,
                "assignment_id": 172,
                "number": 26,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)[ Fx > (Ey)(-Fy . Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6079,
                "assignment_id": 172,
                "number": 27,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)[ Fx > (Ey)(-Fy . Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6080,
                "assignment_id": 172,
                "number": 28,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)[ Fx <> (Ey)(-Fy . Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6081,
                "assignment_id": 172,
                "number": 29,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)[ Fx <> (Ey)(-Fy . Pxy) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6082,
                "assignment_id": 172,
                "number": 30,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)[ (Fx <> -Fy) . Pxy . -Pyx ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6083,
                "assignment_id": 172,
                "number": 31,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)[ (Fx <> -Fy) . Pxy . -Pyx ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6084,
                "assignment_id": 172,
                "number": 32,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)(Ez)(y!=z . Pxy . Pxz . -Pyx . -Pzx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6085,
                "assignment_id": 172,
                "number": 33,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)(Ez)(y!=z . Pxy . Pxz . -Pyx . -Pzx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 6086,
                "assignment_id": 172,
                "number": 34,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey){ Pxy . -Pyx . (Az)[ Pyz > (Aw)(Pyw <> Pzw) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            },
            {
                "id": 6087,
                "assignment_id": 172,
                "number": 35,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey){ Pxy . -Pyx . (Az)[ Pyz > (Aw)(Pyw <> Pzw) ] }",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "false"
            },
            {
                "id": 8178,
                "assignment_id": 172,
                "number": 36,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)[-Pxy . (Az)(Pxz | Pyz)]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true"
            }
        ]
    },
    {
        number: 11,
        problems: [
            {
                "id": 10951,
                "assignment_id": 373,
                "number": 1,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Ey)(Fx . Gy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 10952,
                "assignment_id": 373,
                "number": 2,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "[ (Ex)(Ey)(Fx . Gy) ] <> -(Ex)(Fx . Gx) ",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 10953,
                "assignment_id": 373,
                "number": 3,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Ey)(Fx | Gy) <> -(Ax)(Fx | Gx)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 10954,
                "assignment_id": 373,
                "number": 4,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Ey)(Fx <> Gy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 10955,
                "assignment_id": 373,
                "number": 5,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ay)(Fx <> Gy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 10956,
                "assignment_id": 373,
                "number": 6,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)(Fx <> Gy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 10957,
                "assignment_id": 373,
                "number": 7,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Ay)(Fx <> Gy)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 10958,
                "assignment_id": 373,
                "number": 8,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ay)(Az)[ Fx > (Gy <> Hz) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 10959,
                "assignment_id": 373,
                "number": 9,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ex)(Ay)(Ez)[ Fx > (Gy <> Hz) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            },
            {
                "id": 10960,
                "assignment_id": 373,
                "number": 10,
                "type": "quantInterp",
                "question": null,
                "answer": null,
                "logStr": "(Ax)(Ey)(Az)[ Fx > (Gy <> Hz) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": "true/false"
            }
        ]
    },
    {
        number: 12,
        problems: [
            {
                "id": 10965,
                "assignment_id": 374,
                "number": 1,
                "type": "paraphrase",
                "question": "If it rains today, then it won’t snow, unless the temperature dropsprecipitously, in which case it will snow regardless of whether it rains.",
                "answer": null,
                "logStr": "[ (p . -q) >-r ] . (q > r)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10966,
                "assignment_id": 374,
                "number": 2,
                "type": "paraphrase",
                "question": "Samantha will go to the movies either tonight or tomorrow night (or both),and Suzy will join her – though only for the earlier of the two. [Explanation:Suzy will go with Samantha, but just once, and prefers an earlier date to alater date. Careful: you will need TWO sentence letters to capture thedi erence between Suzy joining tonight, and Suzy joining tomorrow night.]",
                "answer": null,
                "logStr": "(p | q) . [ p > (r . -s) ] . [ (q . -p) > (-r . s) ]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10967,
                "assignment_id": 374,
                "number": 3,
                "type": "paraphrase",
                "question": "Billy and Suzy will have dinner with whichever of Samantha and Ahmed that the other doesn’t have dinner with. [Explanation: There will be two dinners, each of which will involve exactly one of Billy and Suzy, and exactly one of Samantha and Ahmed.]",
                "answer": null,
                "logStr": "(p . -q . r . -s) | (-p . q . -r . s)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10968,
                "assignment_id": 374,
                "number": 4,
                "type": "paraphrase",
                "question": "Billy will make it to lunch and dinner today if he doesn’t sleep through his alarm, and will make it to neither if he does – unless Suzy stops by to check on him, in which case he’ll make it to dinner but not lunch. [Explanation: The ‘unless’ clause is meant to qualify the circumstance in which he sleeps through his alarm, not the circumstance in which he doesn’t.]",
                "answer": null,
                "logStr": "[-p > (q . r) ] . [ (p . -s) > (-q . -r) ] . [ (p . s) > (-q . r)]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10969,
                "assignment_id": 374,
                "number": 5,
                "type": "paraphrase",
                "question": "Billy will enroll in Logic, but will enjoy the course only if Suzy enrolls in it too – and even then, only if he improves his study habits.",
                "answer": null,
                "logStr": "p . [q > (r . s)]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10970,
                "assignment_id": 374,
                "number": 6,
                "type": "paraphrase",
                "question": "Billy will study on just one of Monday and Tuesday, as will Suzy; but only if they study on the same day will she help him prepare for the quiz.",
                "answer": null,
                "logStr": "(p <> -q) . (r <> -s) . [t > ((p . r) | (q . s))]",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 10971,
                "assignment_id": 374,
                "number": 7,
                "type": "paraphrase",
                "question": "None of Billy, Suzy, and Ahmed will enroll in Advanced Cetology unless the other two do.",
                "answer": null,
                "logStr": "(p | q | r) > (p . q . r)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            }
        ]
    },
    {
        number: 13,
        problems: [
            {
                "id": 8095,
                "assignment_id": 224,
                "number": 1,
                "type": "natLangArg",
                "question": "Billy and Samantha will both go to the movies on Monday.",
                "answer": null,
                "logStr": "r.t",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "(p | q).(p > r).(q > -s),  [(r|s)>(t | u)].(t>r).(u>s),  (r.s) <> -(t | u)",
                "sentSet": "Suzy will go to the movies on Monday – in which case Samantha will join her that day – or on Tuesday – in which case Samantha won’t./Billy will go to the movies on at least one of Monday and Tuesday, though only if Samantha goes on that same day./Samantha won’t go to the movies on both days unless Billy goes on neither, in which case she will."
            },
            {
                "id": 8096,
                "assignment_id": 224,
                "number": 2,
                "type": "paraphrase",
                "question": "Suzy will go to the movies on Monday – in which case Samantha will join her that day – or on Tuesday – in which case Samantha won’t.",
                "answer": null,
                "logStr": "(p | q).(p > r).(q > -s)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 8097,
                "assignment_id": 224,
                "number": 3,
                "type": "paraphrase",
                "question": "Billy will go to the movies on at least one of Monday and Tuesday, though only if Samantha goes on that same day.",
                "answer": null,
                "logStr": " [(r|s)>(t | u)].(t>r).(u>s)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            },
            {
                "id": 8098,
                "assignment_id": 224,
                "number": 4,
                "type": "paraphrase",
                "question": "Samantha won’t go to the movies on both days unless Billy goes on neither, in which case she will.",
                "answer": null,
                "logStr": "(r.s) <> -(t | u)",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": null,
                "sentSet": null
            }
        ]
    },
    {
        number: 14,
        problems: [
            {
                "id": 8099,
                "assignment_id": 225,
                "number": 1,
                "type": "natLangArg",
                "question": "If she gets overconfident, she’ll lose the election.",
                "answer": null,
                "logStr": "r > -p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "p <> -q,    r > (q <> -s),    s > -r",
                "sentSet": "Suzy will win the election, unless she bombs the last debate./If she gets overconfident, then she will bomb that debate, unless she prepares adequately./She’ll prepare adequately only if she doesn’t get overconfident"
            },
            {
                "id": 8100,
                "assignment_id": 225,
                "number": 2,
                "type": "natLangArg",
                "question": "If she gets overconfident, she’ll lose the election.",
                "answer": null,
                "logStr": "r > -p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "p | q,     r > (q | s),     s > -r",
                "sentSet": "Suzy will win the election, unless she bombs the last debate./If she gets overconfident, then she will bomb that debate, unless she prepares adequately./She’ll prepare adequately only if she doesn’t get overconfident"
            },
            {
                "id": 8101,
                "assignment_id": 225,
                "number": 3,
                "type": "natLangArg",
                "question": "If she gets overconfident, she’ll lose the election.",
                "answer": null,
                "logStr": "r > -p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "p <> -q,   r > (q | s),   s > -r",
                "sentSet": "Suzy will win the election, unless she bombs the last debate./If she gets overconfident, then she will bomb that debate, unless she prepares adequately./She’ll prepare adequately only if she doesn’t get overconfident"
            },
            {
                "id": 8102,
                "assignment_id": 225,
                "number": 4,
                "type": "natLangArg",
                "question": "If she gets overconfident, she’ll lose the election.",
                "answer": null,
                "logStr": "r > -p",
                "logStr1": null,
                "logStr2": null,
                "logStrSet": "p | q,  r > (q <> -s),  s > -r",
                "sentSet": "Suzy will win the election, unless she bombs the last debate./If she gets overconfident, then she will bomb that debate, unless she prepares adequately./She’ll prepare adequately only if she doesn’t get overconfident"
            }
        ]
    }
 ];